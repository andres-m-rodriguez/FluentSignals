@namespace FluentSignals.WebAssembly.Components.Pages.Demos.SignalDemo.Components
@using FluentSignals.Implementations.Core
@using FluentSignals.Blazor.Components
@using FluentSignals.WebAssembly.Components
@inherits SignalComponentBase

<div class="demo-content">
            <div class="input-group">
                <label>First Name:</label>
                <input type="text" @bind="firstName.Value" @bind:event="oninput" />
            </div>
            <div class="input-group">
                <label>Last Name:</label>
                <input type="text" @bind="lastName.Value" @bind:event="oninput" />
            </div>
            <div class="result-display">
                <span class="label">Full Name:</span>
                <span class="value">@fullName.Value</span>
            </div>
            <TabbedCodeBlock CSharpCode="@computedSignalCode" RazorCode="@computedSignalRazorCode" />
</div>

@code {
    // Computed Signal Demo
    private TypedSignal<string> firstName = new("John");
    private TypedSignal<string> lastName = new("Doe");
    private TypedSignal<string> fullName = new("");

    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Setup computed signal
        SetupComputedSignal();
    }

    private void SetupComputedSignal()
    {
        Action updateFullName = () => fullName.Value = $"{firstName.Value} {lastName.Value}";
        
        // Use the base class subscription method for automatic UI updates
        SubscribeToSignal(firstName, (string value) => 
        { 
            updateFullName();
        });
        
        SubscribeToSignal(lastName, (string value) => 
        { 
            updateFullName();
        });
        
        // Also subscribe to fullName for UI updates
        SubscribeForUpdate(fullName);
        
        // Initial computation
        updateFullName();
    }

    // Code examples
    private string computedSignalCode = @"using FluentSignals.Implementations.Core;

public partial class ComputedSignalDemo
{
    private TypedSignal<string> firstName = new(""John"");
    private TypedSignal<string> lastName = new(""Doe"");
    private TypedSignal<string> fullName = new("""");

    protected override void OnInitialized()
    {
        // Setup computed signal
        Action updateFullName = () => 
            fullName.Value = $""{firstName.Value} {lastName.Value}"";
            
        firstName.Subscribe(_ => 
        { 
            updateFullName();
            InvokeAsync(StateHasChanged);
            return _;
        });
        
        lastName.Subscribe(_ => 
        { 
            updateFullName();
            InvokeAsync(StateHasChanged);
            return _;
        });
        
        // Initial computation
        updateFullName();
    }
}";

    private string computedSignalRazorCode = @"<div class=""input-group"">
    <label>First Name:</label>
    <input type=""text"" @bind=""firstName.Value"" @bind:event=""oninput"" />
</div>
<div class=""input-group"">
    <label>Last Name:</label>
    <input type=""text"" @bind=""lastName.Value"" @bind:event=""oninput"" />
</div>

<div class=""result-display"">
    <span>Full Name: @fullName.Value</span>
</div>";
}

<style>
    .demo-content {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .input-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .input-group label {
        font-weight: 600;
        color: #64748b;
    }

    .input-group input {
        padding: 0.75rem;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-size: 1rem;
    }

    .input-group input:focus {
        outline: none;
        border-color: #4f46e5;
    }

    .result-display {
        padding: 1.5rem;
        background: linear-gradient(135deg, #667eea20, #764ba220);
        border-radius: 8px;
        text-align: center;
    }

    .result-display .label {
        font-weight: 600;
        color: #64748b;
        margin-right: 0.5rem;
    }

    .result-display .value {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1e293b;
    }
</style>