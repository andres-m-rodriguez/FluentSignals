@namespace FluentSignals.WebAssembly.Components.Pages.Demos.SignalDemo.Components
@using FluentSignals.Implementations.Core
@using FluentSignals.Blazor.Components
@using FluentSignals.WebAssembly.Components
@inherits SignalComponentBase

<div class="demo-content">
            <div class="value-display">
                <span class="label">Current Value:</span>
                <span class="value">@counter.Value</span>
            </div>
            <div class="button-group">
                <button class="btn btn-primary" @onclick="IncrementCounter">Increment</button>
                <button class="btn btn-secondary" @onclick="DecrementCounter">Decrement</button>
                <button class="btn btn-outline" @onclick="ResetCounter">Reset</button>
            </div>
            
            <TabbedCodeBlock CSharpCode="@basicSignalCode" RazorCode="@basicSignalRazorCode" />
</div>

@code {
    // Basic Signal Demo
    private TypedSignal<int> counter = new(0);

    private void IncrementCounter() => counter.Value++;
    private void DecrementCounter() => counter.Value--;
    private void ResetCounter() => counter.Value = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        // Subscribe to counter signal for UI updates using the base class method
        SubscribeToSignal(counter, value => 
        {
            // Log changes for demonstration purposes
            Console.WriteLine($"Counter changed to: {value}");
        });
    }

    // Code examples
    private string basicSignalCode = @"using FluentSignals.Implementations.Core;

public partial class BasicSignalDemo
{
    private TypedSignal<int> counter = new(0);
    
    private void IncrementCounter() => counter.Value++;
    private void DecrementCounter() => counter.Value--;
    private void ResetCounter() => counter.Value = 0;
    
    protected override void OnInitialized()
    {
        // Subscribe to changes for demonstration
        counter.Subscribe(value => 
        {
            Console.WriteLine($""Counter changed to: {value}"");
            InvokeAsync(StateHasChanged);
        });
    }
}";

    private string basicSignalRazorCode = @"<div class=""value-display"">
    <span>Current Value:</span>
    <span>@counter.Value</span>
</div>

<button @onclick=""IncrementCounter"">Increment</button>
<button @onclick=""DecrementCounter"">Decrement</button>
<button @onclick=""ResetCounter"">Reset</button>";
}

<style>
    .demo-content {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .value-display {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: #f8fafc;
        border-radius: 8px;
    }

    .value-display .label {
        font-weight: 600;
        color: #64748b;
    }

    .value-display .value {
        font-size: 2rem;
        font-weight: 700;
        color: #1e293b;
    }

    .button-group {
        display: flex;
        gap: 0.75rem;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-primary {
        background: #4f46e5;
        color: white;
    }

    .btn-primary:hover {
        background: #4338ca;
    }

    .btn-secondary {
        background: #64748b;
        color: white;
    }

    .btn-secondary:hover {
        background: #475569;
    }

    .btn-outline {
        background: transparent;
        border: 2px solid #e5e7eb;
        color: #64748b;
    }

    .btn-outline:hover {
        background: #f8fafc;
    }
</style>