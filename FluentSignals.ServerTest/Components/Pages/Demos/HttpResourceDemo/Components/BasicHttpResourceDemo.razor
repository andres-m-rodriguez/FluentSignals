@namespace FluentSignals.ServerTest.Components.Pages.Demos.HttpResourceDemo.Components
@using FluentSignals.Options.HttpResource
@using FluentSignals.Blazor.Components
@using FluentSignals.Blazor.Extensions
@using FluentSignals.ServerTest.Components
@using FluentSignals.ServerTest.Controllers

@inherits SignalComponentBase
@rendermode InteractiveServer

<div class="demo-content">

            <HttpResourceView T="WeatherForecast[]"
                              Url="/api/weather"
                              LoadOnInit="true">
                              
                <Loading>
                    <div class="weather-loading">
                        <div class="weather-skeleton">
                            @for (int i = 0; i < 5; i++)
                            {
                                <div class="skeleton-card">
                                    <div class="skeleton-line short"></div>
                                    <div class="skeleton-line"></div>
                                    <div class="skeleton-line medium"></div>
                                </div>
                            }
                        </div>
                    </div>
                </Loading>


                <Success Context="forecasts">
                    <div class="weather-grid">
                        @foreach (var forecast in forecasts)
                        {
                            <div class="weather-card">
                                <div class="weather-date">@forecast.Date.ToString("MMM dd")</div>
                                <div class="weather-temp">@forecast.TemperatureC¬∞C</div>
                                <div class="weather-summary">@forecast.Summary</div>
                            </div>
                        }
                    </div>
                </Success>


                <Empty>
                    <div class="empty-state">
                        <span class="empty-icon">üå§Ô∏è</span>
                        <p>No weather data available</p>
                    </div>
                </Empty>
            </HttpResourceView>

    <CodeBlock Code="@BasicHttpResourceDemo.CodeExample" />
</div>


@code {
    public static readonly string CodeExample = @"
<HttpResourceView T=""WeatherForecast[]""
                  Url=""/api/weather""
                  LoadOnInit=""true"">
    <Loading>
        <div class=""spinner"">Loading weather data...</div>
    </Loading>

    <Success Context=""forecasts"">
        <div class=""weather-grid"">
            @foreach (var forecast in forecasts)
            {
                <div class=""weather-card"">
                    <div>@forecast.Date</div>
                    <div>@forecast.TemperatureC¬∞C</div>
                    <div>@forecast.Summary</div>
                </div>
            }
        </div>
    </Success>

    <Empty>
        <p>No weather data available</p>
    </Empty>

    <NotFound>
        <p>Weather service not found</p>
    </NotFound>

    <ServiceUnavailable>
        <p>Weather service is temporarily unavailable</p>
    </ServiceUnavailable>
</HttpResourceView>";
}

<style>
    .weather-loading {
        padding: 2rem;
    }

    .weather-skeleton {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
    }

    .skeleton-card {
        background: #f8fafc;
        padding: 1.5rem;
        border-radius: 8px;
    }

    .skeleton-line {
        height: 16px;
        background: linear-gradient(90deg, #e5e7eb 25%, #f3f4f6 50%, #e5e7eb 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
        border-radius: 4px;
        margin-bottom: 0.5rem;
    }

        .skeleton-line.short {
            width: 60%;
        }

        .skeleton-line.medium {
            width: 80%;
        }

    @@keyframes loading {
        0% {
            background-position: 200% 0;
        }

        100% {
            background-position: -200% 0;
        }
    }

    .weather-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
    }

    .weather-card {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 1.5rem;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .weather-date {
        font-size: 0.875rem;
        opacity: 0.9;
    }

    .weather-temp {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0.5rem 0;
    }

    .weather-summary {
        font-size: 1rem;
        opacity: 0.9;
    }

    .empty-state {
        text-align: center;
        padding: 3rem;
        color: #64748b;
    }

    .empty-icon {
        font-size: 3rem;
        display: block;
        margin-bottom: 1rem;
    }
</style>