<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["FluentSignals.WebAssembly.styles.css"]" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet />
    <style>
        #loading-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #0f0f23;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

        .signal-animation {
            position: relative;
            width: 300px;
            height: 300px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .signal-node {
            position: absolute;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .node-core {
            width: 20px;
            height: 20px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 50%;
            box-shadow: 0 0 20px rgba(102, 126, 234, 0.8);
        }

        .signal-node.central {
            z-index: 10;
        }

        .signal-node.central .node-core {
            width: 40px;
            height: 40px;
        }

        .pulse-ring {
            position: absolute;
            width: 60px;
            height: 60px;
            border: 2px solid rgba(102, 126, 234, 0.5);
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        .pulse-ring.delay-1 {
            animation-delay: 0.5s;
        }

        .pulse-ring.delay-2 {
            animation-delay: 1s;
        }

        @@keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            100% {
                transform: scale(2.5);
                opacity: 0;
            }
        }

        .orbit-container {
            position: absolute;
            width: 200px;
            height: 200px;
            animation: rotate 20s linear infinite;
        }

        @@keyframes rotate {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }

        .signal-node.orbit {
            top: 0;
            left: 50%;
            transform: translateX(-50%);
        }

        .signal-node.orbit-2 {
            transform: rotate(90deg);
            transform-origin: 50% 100px;
        }

        .signal-node.orbit-3 {
            transform: rotate(180deg);
            transform-origin: 50% 100px;
        }

        .signal-node.orbit-4 {
            transform: rotate(270deg);
            transform-origin: 50% 100px;
        }

        .loading-text {
            position: absolute;
            bottom: -100px;
            text-align: center;
            color: #fff;
        }

        .loading-text h2 {
            font-size: 2rem;
            margin: 0;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .loading-text p {
            margin: 0.5rem 0 0 0;
            color: #9ca3af;
            font-size: 0.875rem;
        }

        #loading-screen.hide {
            opacity: 0;
            transition: opacity 0.5s ease-out;
            pointer-events: none;
        }
    </style>
</head>

<body>
    <div id="loading-screen" style="display: none;">
        <div class="signal-animation">
            <!-- Central node -->
            <div class="signal-node central">
                <div class="node-core"></div>
                <div class="pulse-ring"></div>
                <div class="pulse-ring delay-1"></div>
                <div class="pulse-ring delay-2"></div>
            </div>
            
            <!-- Orbiting nodes -->
            <div class="orbit-container">
                <div class="signal-node orbit orbit-1">
                    <div class="node-core"></div>
                </div>
                <div class="signal-node orbit orbit-2">
                    <div class="node-core"></div>
                </div>
                <div class="signal-node orbit orbit-3">
                    <div class="node-core"></div>
                </div>
                <div class="signal-node orbit orbit-4">
                    <div class="node-core"></div>
                </div>
            </div>
            
            <div class="loading-text">
                <h2>FluentSignals</h2>
                <p>Initializing reactive state...</p>
            </div>
        </div>
    </div>

    <FluentSignals.WebAssembly.Routes @rendermode="InteractiveWebAssembly" />
    
    <script src="_framework/blazor.web.js"></script>
    <script src="@Assets["lib/bootstrap/dist/js/bootstrap.bundle.min.js"]"></script>
    <script>
        // Only show loading screen on initial page load
        (function() {
            // Check if this is an initial page load
            const isInitialPageLoad = !sessionStorage.getItem('blazorAppStarted');
            
            if (isInitialPageLoad) {
                // Show loading screen immediately
                const loadingScreen = document.getElementById('loading-screen');
                if (loadingScreen) {
                    loadingScreen.style.display = 'flex';
                }
                
                // Mark that the app has been loaded in this session
                sessionStorage.setItem('blazorAppStarted', 'true');
                
                // Hide loading screen function
                function hideLoadingScreen() {
                    const loadingScreen = document.getElementById('loading-screen');
                    if (loadingScreen && loadingScreen.style.display !== 'none') {
                        loadingScreen.classList.add('hide');
                        setTimeout(function() {
                            loadingScreen.style.display = 'none';
                        }, 500);
                    }
                }
                
                // Minimum display time for loading screen (2.5 seconds)
                const minimumLoadTime = 2500;
                const loadStartTime = Date.now();
                
                function hideAfterMinimumTime() {
                    const elapsedTime = Date.now() - loadStartTime;
                    const remainingTime = Math.max(0, minimumLoadTime - elapsedTime);
                    
                    setTimeout(hideLoadingScreen, remainingTime);
                }
                
                // For server-side Blazor, wait for DOM and then ensure minimum time
                if (document.readyState === 'loading') {
                    document.addEventListener('DOMContentLoaded', hideAfterMinimumTime);
                } else {
                    // DOM already loaded
                    hideAfterMinimumTime();
                }
                
                // Also ensure it's hidden after Blazor fully initializes
                // This handles cases where Blazor takes longer than our minimum time
                if (typeof Blazor !== 'undefined') {
                    Blazor.addEventListener('afterStarted', function() {
                        // Only hide if minimum time has passed
                        const elapsedTime = Date.now() - loadStartTime;
                        if (elapsedTime >= minimumLoadTime) {
                            hideLoadingScreen();
                        }
                    });
                }
            }
        })();
    </script>
</body>

</html>